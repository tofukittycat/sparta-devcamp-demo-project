################
# <타입> : <제목> 의 형식으로 제목을 아래 공백줄에 작성합니다.
#  여기에 최대 50자까지 변경 사항에 대해 설명하세요(마침표 금지).
# 예) Feat: [#이슈번호] 로그인 기능 추가

# 바로 아래 공백은 지우지 마세요(제목과 본문의 분리를 위함). 제목과 본문을 나누는 중간에 삽입되는 공백 행은 매우 중요합니다 (본문을 완전히 생략하지 않는 이상); `log` 와 `shortlog`, `rebase` 와 같이 다양한 도구들은 공백에 의존하므로 두 부분을 합쳐버릴 경우 도구가 혼동할 수 있습니다.

################
# 필요하다면 여기에 좀 더 상세하게 설명하세요(한 줄당 대략 72자까지). 일부 상황에서 첫 줄은 커밋의 제목이 되고, 그 후에 작성되는 텍스트는 본문으로 취급됩니다.
# 이 커밋이 해결하고자하는 문제를 설명합니다. 어떻게 했는지보단(코드가 설명할 것이기 때문), 왜 변경 사항을 적용했는지에 대해 집중합니다. 이 변경 사항으로 인해 생기는 부수 효과가 있거나 다른 직관적이지 않은 영향이 있을 수 있다면 여기에 설명하세요.
# 필요하다면 강조점을 써도 됩니다. 하이픈(-) 또는 별(*)이 주로 강조점으로 사용되고 이후 단일 공백(space)을 삽입합니다. 강조점 사이에는 공백 행을 넣지만 규칙은 언제든지 바꿀 수 있습니다.
# 앞으로 추가되는 문단은 공백 행 뒤에 옵니다.

################
# 이슈 트래커를 사용한다면 다음과 같이 레퍼런스를 메시지 하단에 삽입하세요:
# 예) 이슈: #123
# 예) 같이보기: #456, #789

################
# <타입> 작성 시 참고할 커밋 컨벤션.
# ✨Feat(페이지 경로 또는 컴포넌트): 새로운 기능 추가 또는 기능 업데이트
# 🔨Fix(페이지 경로 또는 컴포넌트): 버그 또는 에러 수정
# ⭐️Style(페이지 경로 또는 컴포넌트): 코드 포맷팅, 코드 오타, 함수명 수정 등 스타일 수정
# 🧠Refactor(페이지 경로 또는 컴포넌트): 코드 리팩토링(똑같은 기능인데 코드만 개선)
# 📁File(페이지 경로 또는 컴포넌트): 파일 이동 또는 제거, 파일명 변경
# 🎨Design(페이지 경로 또는 컴포넌트): 디자인, 문장 수정
# 🏷Comment(페이지 경로 또는 컴포넌트): 주석 수정 및 삭제
# 🍎Chore: 빌드 수정, 패키지 추가, 환경변수 설정
# 📝Docs: 문서 수정, 블로그 포스트 추가
# 🔥Hotfix: 핫픽스 수정